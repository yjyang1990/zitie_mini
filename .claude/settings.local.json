{
  "permissions": {
    "allow": [
      "Edit",
      "MultiEdit", 
      "Write",
      "NotebookEdit",
      
      "Bash(bash *.sh)",
      "Bash(bash .claude/scripts/*.sh)",
      "Bash(bash .claude/lib/*.sh)",
      "Bash(bash tests/*.sh)",
      
      "Bash(bats tests/*)",
      "Bash(bats --version)",
      
      "Bash(git status)",
      "Bash(git log --oneline *)",
      "Bash(git branch)",
      "Bash(git diff *)",
      "Bash(git add .)",
      "Bash(git commit *)",
      "Bash(git push)",
      "Bash(git pull)",
      "Bash(git worktree *)",
      
      "Bash(gh repo view)",
      "Bash(gh issue list)",
      "Bash(gh issue view *)",
      "Bash(gh issue create *)",
      "Bash(gh pr list)",
      "Bash(gh pr view *)",
      "Bash(gh pr create *)",
      "Bash(gh auth status)",
      
      "Bash(npm install)",
      "Bash(npm run *)",
      "Bash(npm test)",
      "Bash(npm run build)",
      "Bash(npm run dev)",
      "Bash(npm ls)",
      "Bash(npm audit)",
      "Bash(npx --version)",
      "Bash(pnpm install)",
      "Bash(pnpm run *)",
      "Bash(yarn install)",
      "Bash(yarn run *)",
      
      "Bash(python *)",
      "Bash(pytest *)",
      "Bash(pip *)",
      "Bash(ruff *)",
      
      "Bash(composer *)",
      
      "Bash(cargo *)",
      "Bash(rustc --version)",
      
      "Bash(go *)",
      
      "Bash(mvn *)",
      "Bash(gradle *)",
      
      "Bash(shellcheck *)",
      "Bash(find . -name *)",
      "Bash(grep -r * .)",
      "Bash(ls -la *)",
      "Bash(tree *)",
      "Bash(cat *)",
      "Bash(chmod +x *.sh)",
      "Bash(mkdir -p *)",
      "Bash(cp * *)",
      "Bash(mv * *)",
      "Bash(rm -f *.tmp)",
      "Bash(jq *)",
      "Bash(which *)",
      "Bash(command -v *)",
      "Bash(date)",
      "Bash(pwd)",
      "Bash(uname *)",
      
      "WebFetch(domain:github.com)",
      "WebFetch(domain:api.github.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:anthropic.com)",
      "WebSearch",
      "TodoWrite",
      "Task(subagent_type:*)"
    ]
  },
  "enhanced_features": {
    "auto_commit": true,
    "test_driven_development": true,
    "context_optimization": true,
    "multi_agent_workflows": true
  },
  "workflow_patterns": {
    "default_workflow": "epcc",
    "use_git_worktrees": true,
    "auto_clear_context": true,
    "proactive_sub_agents": false
  },
  "quality_gates": {
    "run_tests_before_commit": true,
    "shellcheck_validation": true,
    "security_audit_checks": true
  }
}
